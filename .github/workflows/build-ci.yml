# Test all pull requests to ensure they build

name: Build Pioneer

# Controls when the action will run.
on:
  push:
    branches:
    - master
  pull_request:
    paths:
    - 'src/**.cpp'
    - 'src/**.h'

env:
  packages: >
    mesa-common-dev
    libfreeimage-dev
    libglew-dev
    libsigc++-2.0-dev
    libvorbis-dev
    libassimp-dev
    libsdl2-dev
    libsdl2-image-dev

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-msvc:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
        with:
          path: pioneer

      - name: Checkout pioneer-thirdparty
        uses: actions/checkout@v2
        with:
          repository: pioneerspacesim/pioneer-thirdparty
          path: pioneer-thirdparty

      - name: Build MSVC
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cd pioneer
          mkdir build
          cd build
          cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX="C:/Program Files/Pioneer" -DPIONEER_DATA_DIR="C:/Program Files/Pioneer/data" -DCMAKE_BUILD_TYPE:STRING=Release -DGIT_EXECUTABLE="c:/Program Files/Git/cmd/git.exe"
          cmake --build .

      - name: Build Pioneer Data
        shell: cmd
        run: |
          cd pioneer
          modelcompiler.exe -b inplace          

      - name: Build Release
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cd pioneer
          cd build
          cmake --build . --target install
          cmake --build . --target win-installer

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Windows-Artifacts
          path: pioneer/pioneer-*-win.exe

  build-gcc:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]

    steps:
    # Checkout the repository as $GITHUB_WORKSPACE
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-fast update
        sudo apt-fast install -y ${{ env.packages }}

    - name: Build GCC
      run: ./bootstrap cmake && make -C build

    - name: Build Pioneer Data
      run: make -C build build-data

    - name: Build Release
      run: ./scripts/build-travis.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Linux-Artifacts
        path: release/zip/*.tar.gz

  build-clang:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checkout the repository as $GITHUB_WORKSPACE
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-fast update
        sudo apt-fast install -y clang-8 ${{ env.packages }}

    - name: Build Clang
      run: |
        export CC=clang CXX=clang++
        ./bootstrap cmake && make -C build

    - name: Build Pioneer Data
      run: make -C build build-data

    - name: Build Release
      run: ./scripts/build-travis.sh
