name: "Upload Linux Artifacts"
description: "Manage generating and uploading release artifacts for linux builds"

inputs:
  artifact_name:
    description: "Name of generated artifact"
    required: true
  build_slug:
    description: "platform-arch-build-flags"
    required: true
  token:
    description: "access token for uploading to releases"
    default: ""
  upload_release:
    description: "should the binary be uploaded to a tagged release?"
    default: false
  tag_name:
    description: "release tag to upload artifacts to"
    default: ""

runs:
  using: "composite"
  steps:
    - name: Install
      shell: bash
      run: cmake --build ./build --target install

    - name: Package Artifact
      shell: bash
      env:
        BUILD_SLUG: ${{ inputs.build_slug }}
      run: |
        cd out/install/
        tar -czf "pioneer-$BUILD_SLUG-$(date +%Y%m%d).tar.gz" "pioneer-$BUILD_SLUG"

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        path: ${{ format('out/install/pioneer-{0}-*.tar.gz', inputs.build_slug) }}
        retention-days: 14
        compression-level: 0 # contains a pre-compressed .tar.gz archive...

    - name: Build Release
      shell: bash
      env:
        BUILD_SLUG: ${{ inputs.build_slug }}
      run: ./scripts/package-release.sh

    - name: Upload Release Files
      uses: softprops/action-gh-release@v1
      if: ${{ (github.event_name == 'release' || github.event_name == 'workflow_dispatch') && inputs.upload_release }}
      with:
        files: release/pioneer-linux-x64-*.tar.gz
        tag_name: ${{ inputs.tag_name || github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
